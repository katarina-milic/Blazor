@page "/login"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using Blazor.Shared

<h3 style="margin-bottom:20px" id="naslov2">Ulogujte se</h3>
<label class="alert-danger">@Error</label>

<EditForm Model="user" OnValidSubmit="LoginUser">
    
    <ValidationSummary />
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label id="tekst"> Username:</label>
                <InputText placeholder="Username" class="form-control" @bind-Value="@user.Username" />
                <ValidationMessage For="@(() => user.Username)" />

            </div>

            <div class="form-group">
                <label id="tekst"> Password:</label>
                <div>
                    <input type="password" class="form-control" placeholder="Password" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{8,15}$" title="Sifra mora imati minimum 8 karaktera i pri tome bar jedno veliko slovo, specijalan znak i broj" @bind="@user.Password" />
                    <ValidationMessage For="@(() => user.Password)" />
                </div>

            </div>
        </div>
    </div>
    <a href="/forgotPassword" id="tekst">Forgot password?</a>
    <button type="submit" class="btn btnSacuvaj" @onclick="LoginUser">Log in</button>

</EditForm>

@code {
    private User user = new User();
    public string Error { get; set; }
    private void NavigateToCounterComponent()
    {
        NavigationManager.NavigateTo("/addfilm");
    }

    async Task LoginUser()
    {
        List<User> users;
        users = await Http.GetJsonAsync<List<User>>(@"api/User/Index");
        foreach (User u in users)
        {
            if (u.Username == user.Username && u.Password == user.Password)
            {
                NavigateToCounterComponent();
            }
            else
            {
                Error = "Korisnik nije ulogovan.";
            }
        }


    }
}


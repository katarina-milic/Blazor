@using Blazor.Shared
@page "/editfilm/{Id}"
@inject HttpClient Http
@inject NavigationManager NavigationManager


<h3 id="naslov2">Izmeni film</h3>

<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <label id="tekst" for="Naziv" class="col-form-label-lg">Naziv</label>
            <input for="Naziv" @bind-value="@flm.Naziv" class="form-control" placeholder="Unesite ime filma" />
        </div>
        <div class="form-group">
            <label id="tekst" for="Zanr" class="col-form-label-lg">Žanr</label>
            <select for="Zanr" @bind="@flm.Zanr" class="form-control" placeholder="Unesite žanr filma">
                <option disabled hidden selected value=""> Odaberite zanr filma</option>
                <option value="KOMEDIJA">KOMEDIJA</option>
                <option value="ROMANTIKA">ROMANTIKA</option>
                <option value="HOROR">HOROR</option>
                <option value="TRAGEDIJA">TRAGEDIJA</option>
                <option value="AKCIJA">AKCIJA</option>
                <option value="TRILER">TRILER</option>
                <option value="DRAMA">DRAMA</option>
                <option value="NAUCNA FANTASTIKA">NAUCNA FANTASTIKA</option>

            </select>
        </div>
        <div class="form-group">
            <label id="tekst" for="Datum" class="col-form-label-lg">Trenutne projekcije</label>
            <GenericList Elements="listaProjekcija">
                <NullTemplate>
                    <div>
                        <img class="center" height="100" width="100" src="http://www.pzv.org.rs/obuke/images/loading.gif" />
                    </div>
                </NullTemplate>
                <EmptyTemplate>
                    <div>
                        <label id="tekst">Nema projekcija</label>
                    </div>
                </EmptyTemplate>
                <WithElementsTemplate>
                    <table id="grad" class="table">
                        <thead>
                            <tr>

                                <th>Datum projekcije</th>
                                <th> Izmena</th>
                                <th>Brisanje</th>

                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var projekcija in listaProjekcija)
                            {

                                <tr>
                                    <td>@projekcija.Datum</td>
                                    <td> <a href="editprojekcija/@projekcija.Id" class="btn btnDelete">Izmeni</a></td>
                                    <td><button class="btn btnDelete" @onclick="(async () => await DeleteDatumProjekcije(projekcija.Id))">Obriši</button></td>

                                </tr>
                            }
                        </tbody>
                    </table>
                </WithElementsTemplate>
            </GenericList>
        </div>
        @*---------------------------------------DODAVANJE NOVE PROJEKCIJE-------------------------------------------------*@
        @*<div class="form-group">
            <input type="datetime-local" id="date_timepicker_end" min="2020-06-01T10:30" max="2020-07-30T22:30" pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}" required @bind-value="datum" class="form-control" />
            <span class="validity"></span>
        </div>
        <div id="center" class="form-group">
            <button class="btn  btnDelete" @onclick="NapraviListu">Dodaj</button>
        </div>*@
        <div id="center" class="form-group">
            <button type="submit" class="btn-lg btnSacuvaj" @onclick="UpdateFilm"> Ažuriraj </button>
        </div>
    </div>
        <p class="alert-success">@poruka</p>

    </div>

@code {
    string poruka;
    Film flm = new Film();
    [Parameter]
    public string Id { get; set; }
    public List<DatumProjekcije> listaProjekcija = new List<DatumProjekcije>();
    DateTime datum;
    



    protected override async Task OnInitializedAsync()
    {
        flm = await Http.GetJsonAsync<Film>($"api/Film/Details/{Convert.ToInt32(Id)}");
        napuni();
    }
    
    private void napuni()
    {
        listaProjekcija = flm.Projekcije;

        this.StateHasChanged();
    }
   
     protected async Task NapraviListu()
    {
        DatumProjekcije dat = new DatumProjekcije();
        dat.Datum = datum;
        flm.Projekcije.Add(dat);

    }

    protected async Task UpdateFilm ()
    {
        await Http.SendJsonAsync(HttpMethod.Put, "api/Film/Edit", flm);
        RedirectToIndex();
    }
    void RedirectToIndex()
    {
        NavigationManager.NavigateTo("/fetchfilms");
    }

     protected async Task DeleteDatumProjekcije(int id)
    {
        await Http.DeleteAsync($"api/DatumProjekcije/Delete/{id}");
       
    }

}


@page "/rezervacija/{Id}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using Blazor.Shared

<h1 id="naslov2">Rezervacija</h1>
<p class="alert-info">@poruka</p>

    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label id="tekst" for="Ime" class="col-form-label-lg">Email</label>
                <input for="Ime" @bind-value="korisnik.Email" class="form-control" placeholder="Unesite vas email" />
            </div>
            <div class="form-group">
                <label id="tekst" for="Naziv" class="col-form-label-lg">Odabrani film</label>
                <input for="Naziv" @bind-value="flm.Naziv" class="form-control" disabled />
            </div>
 @******************************************************************************************@
       
            @*<EditForm>
                <InputSelect class="form-control" placeholder="Izaberite" @bind-Value="@datum.Datum">
                    @foreach (var projekcija in listaProjekcija)
                    {
                        <option> @projekcija.Datum</option>
                    }
                </InputSelect>
            </EditForm>*@
<div class="form-group">
    <label id="tekst" for="Datum" class="col-form-label-lg">Datum i vreme projekcije</label>
    <GenericList Elements="listaProjekcija">
        <NullTemplate>
            <div>
                <img class="center" height="100" width="100" src="http://www.pzv.org.rs/obuke/images/loading.gif" />
            </div>
        </NullTemplate>
        <EmptyTemplate>
            <div>
                <label id="tekst">Nema projekcija</label>
            </div>
        </EmptyTemplate>
        <WithElementsTemplate>
            <table id="grad" class="table">
                <thead>
                    <tr>

                        <th>Datum</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var projekcija in listaProjekcija)
                    {
                    <tr>
                        <td>@projekcija.Datum</td>
                        <td style="color:rgb(76, 255, 0)"><input type="checkbox" @onclick="(async () => await IzabranaProjekcija(projekcija.Id))"/>  Izaberite</td>


                    </tr>
                    }
                </tbody>
            </table>
        </WithElementsTemplate>
    </GenericList>

</div>
<div class="form-group">
    <label id="tekst" for="Sediste" class="col-form-label-lg">Izaberite slobodna sedišta</label>
    <select class="col-form-label-lg" @bind="sediste.Id" multiple>
        @foreach (var sediste in ucitajSedista())
        {
            <option>@sediste.Id</option>
        }
    </select>
   


</div>
@********************************************************************************************@
<div id="center" class="form-group">
    <button type="submit" class=" btn-lg btnSacuvaj" @onclick="CreateRezervacija"> Sačuvaj </button>
</div>


        </div>
    </div>

@code {

    public User korisnik = new User();
    public DatumProjekcije datum = new DatumProjekcije();
    public Blazor.Shared.Rezervacija rezervacija = new Blazor.Shared.Rezervacija();
    Sediste sediste = new Sediste();
    string poruka;
    DateTime datumPr;

    [Parameter]
    public string Id { get; set; }
    public Film flm = new Film();

    public List<Sediste> listaSedista = new List<Sediste>();
    public List<DatumProjekcije> listaProjekcija = new List<DatumProjekcije>();


    protected override async Task OnInitializedAsync()
    {
        flm = await Http.GetJsonAsync<Film>($"api/Film/Details/{Convert.ToInt32(Id)}");

        napuni();
    }

    private void napuni()
    {
        listaProjekcija = flm.Projekcije;

        this.StateHasChanged();
    }

    protected async Task IzabranaProjekcija(int id)
    {
        foreach(var projekcija in listaProjekcija)
        {
            if (projekcija.Id == id)
                datum = projekcija;

        }
    }

    protected async Task CreateRezervacija()
    {
        var rezervacija = new Blazor.Shared.Rezervacija();
        
        rezervacija.Datum = datum;
        rezervacija.Film = flm;
        rezervacija.Sedista = new List<Sediste>() { new Sediste() { IsReserved = true } };
        rezervacija.User = await VratiUsera(korisnik.Email);


        poruka = "Sacuvano!";
        await Http.SendJsonAsync(HttpMethod.Post, "/api/Rezervacija/Create/", rezervacija);

        await Task.Delay(2000);
        //RedirectToIndex();
    }


    private async Task<User> VratiUsera(string email)
    {
        var korisnik = await Http.GetJsonAsync<User>($"api/User/DetailsByEmail/{email}");

        return korisnik;
    }

    public List<Sediste> ucitajSedista()
    {
        OpreativnaMemorija o = new OpreativnaMemorija();
        return o.VratiSedista();
    }

    void RedirectToIndex()
    {
        NavigationManager.NavigateTo("/fetchfilms");
    }
}
